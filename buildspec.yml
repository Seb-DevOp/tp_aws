version: 0.2

phases:
  install:
    commands:
      - echo "Logging in to Amazon ECR..."  # Authentification à ECR (si nécessaire)
      - echo "Installing Composer..."
      - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
      - composer install --no-dev --optimize-autoloader

  pre_build:
    commands:
      - echo "Pre-build phase..."
      - echo "Building the Docker image..."
      - docker-compose build  # Construction de l'image à partir du docker-compose.yml
      - php artisan key:generate  # Générer une clé d'application
      - php artisan config:cache  # Mettre en cache la configuration

  build:
    commands:
      - echo "Build phase..."
      - echo "Running the application using Docker Compose..."
      - docker-compose up -d  # Démarre les conteneurs en arrière-plan
      - docker-compose exec app php artisan migrate --force  # Appliquer les migrations à la base de données
      - docker-compose exec app php artisan optimize  # Optimiser les fichiers de l'application Laravel

  post_build:
    commands:
      - echo "Post-build phase..."
      - echo "Running tests..."  # Si vous avez des tests à exécuter, ajoutez vos commandes ici
      - docker-compose ps  # Affiche l'état des conteneurs en cours d'exécution
      - docker-compose exec app php artisan config:clear  # Effacer le cache de configuration (si nécessaire)
      - docker-compose exec app php artisan route:cache  # Mettre en cache les routes
      - echo "Build completed successfully!"

artifacts:
  files:
    - '**/*'  # Inclure tous les fichiers du répertoire de construction
  discard-paths: yes

cache:
  paths:
    - vendor/**/*  # Met en cache le répertoire des dépendances Composer
